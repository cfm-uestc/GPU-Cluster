@model GPUCluster.Shared.Models.Workload.Image

@{
    ViewData["Title"] = "Create";
    var CurrentUser = ViewData["CurrentUser"] as GPUCluster.Shared.Models.Instance.ApplicationUser;
}

<h1>Create</h1>

<h4>Image</h4>
<hr />
<div class="row">
    <div id="main" class="col-md-4">
        <form onsubmit="clearExisting();" id="create-form" asp-action="Create" data-ajax="true" data-ajax-method="POST" data-ajax-mode="replace" data-ajax-success="createFinish" data-ajax-update="#ajax-form">
            <div id="ajax-form">
                @await Html.PartialAsync("Partial/_CreateForm", ViewData)
            </div>
        </form>
    </div>
</div>
<div class="row col-md-4 mb-4">
    <span id="error-block" class="text-danger"></span>
</div>
<code class="row mb-4 overflow-auto" style="max-height:50em;color:black;" id="docker-output">
</code>
<div class="row col-md-4 mb-4">
    <button id="continue-btn" disabled onclick="window.location.href='RedirectIndex'" class="btn btn-primary">Continue</button> 
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function clearExisting(){
            $('#error-block').html();
            $('#docker-output').empty();
        }
        checkImageCreated = function(){
            $.ajax({
                url: "CheckImageCreated",
                type: "POST",
                data: $("#create-form").serializeArray(),
                success: function (data, status, xhr) {
                    if(data.code==200){
                        $("#continue-btn").prop("disabled", false);
                    } else{
                        setTimeout(checkImageCreated, 2000);
                    }
                }
            })
        }
        createFinish = function (xhr) {
            if($("#create-submit").prop('disabled')){
                $.ajax({
                    url: "BuildAndCreate",
                    type: "POST",
                    data: $("#create-form").serializeArray(),
                    success: function (data, status, xhr) {
                        $('#continue-btn').prop('disabled', false);
                    },
                    error: function (jqXHR, textStatus, errorThown) {
                        if (jqXHR.status == 400) {
                            $('#error-block').text("Error occured, please try again.");
                            $('#create-submit').prop('disabled', false);
                            $('#continue-btn').prop('disabled', true);
                        }
                    }
                });
            }
        };
        (function () {
            var evtSource = new EventSource("Create/sse");
            evtSource.addEventListener("BuildOutput", function(e) { 
                var outputjson = JSON.parse(e.data);
                parseDockerStream(outputjson, function (id, status, progressDetail, progress){
                    var existing = $(`#docker-output #${id}`);
                    if (!progressDetail){
                        progressDetail = null
                    }
                    else{
                        progressDetail = progressDetail.current ? (progressDetail.current / progressDetail.total).toLocaleString(undefined, {style: 'percent', minimumFractionDigits:0}) : null;
                    }
                    var showId = `[${id}]`;
                    var result = [showId, status, progressDetail, progress].filter(Boolean).join(' ');
                    if (existing.length){
                        existing.text(result);
                    }else{
                        $('#docker-output').append(`<span class="col-md-10" id=${id}>${result}</span> `);
                        $('#docker-output').animate({scrollTop: $('#docker-output').get(0).scrollHeight}, 0); 
                    }
                }, function (stream){
                    $('#docker-output').append(`<span class="col-md-10">${stream}</span> `);
                    $('#docker-output').animate({scrollTop: $('#docker-output').get(0).scrollHeight}, 0); 
                }, function (error){
                    $('#error-block').text("There seems like an error occured, you can check the outputs and try again.");
                    $('#docker-output').append(`<span class="col-md-10 text-danger">${error}</span> `);
                    $.ajax({
                        url: "TryDiscardChange",
                        type: "POST",
                        data: $("#create-form").serializeArray(),
                        success: function (data, status, xhr) {
                        }
                    });
                    $('#create-submit').prop('disabled', false);
                    $('#continue-btn').prop('disabled', true);
                })
            });
            evtSource.addEventListener("BuildFinished", function(e) {
                $('#docker-output span[id]').each(function (i) {
                    $(this).removeAttr('id');
                })
                $('#docker-output').append('<span class="col-md-10"> </span> <span class="col-md-10">=======================================================================================</span> <span class="col-md-10"> </span>');
                $('#docker-output').animate({scrollTop: $('#docker-output').get(0).scrollHeight}, 0); 
            });
            evtSource.addEventListener("Success", function (e) {
                $('#continue-btn').prop('disabled', false);
            });
        })();
    </script>
}
